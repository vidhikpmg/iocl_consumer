package in.kpmg.iocl.api;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.2
 * 2023-12-28T12:29:57.566+05:30
 * Generated source version: 3.3.2
 *
 */
@WebServiceClient(name = "ExchangeDataService",
                  wsdlLocation = "file:/C:/Users/vidhiaggarwal/Documents/Projects/IOCL/code/exchange_rate_consumer/iocl_consumer/src/main/resources/wsdl/getExchangeRate.wsdl",
                  targetNamespace = "http://www.kpmg.in/iocl/api")
public class ExchangeDataService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.kpmg.in/iocl/api", "ExchangeDataService");
    public final static QName ExchangeDataSoap11 = new QName("http://www.kpmg.in/iocl/api", "ExchangeDataSoap11");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/vidhiaggarwal/Documents/Projects/IOCL/code/exchange_rate_consumer/iocl_consumer/src/main/resources/wsdl/getExchangeRate.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ExchangeDataService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/vidhiaggarwal/Documents/Projects/IOCL/code/exchange_rate_consumer/iocl_consumer/src/main/resources/wsdl/getExchangeRate.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ExchangeDataService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ExchangeDataService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ExchangeDataService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public ExchangeDataService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public ExchangeDataService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ExchangeDataService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns ExchangeData
     */
    @WebEndpoint(name = "ExchangeDataSoap11")
    public ExchangeData getExchangeDataSoap11() {
        return super.getPort(ExchangeDataSoap11, ExchangeData.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ExchangeData
     */
    @WebEndpoint(name = "ExchangeDataSoap11")
    public ExchangeData getExchangeDataSoap11(WebServiceFeature... features) {
        return super.getPort(ExchangeDataSoap11, ExchangeData.class, features);
    }

}
